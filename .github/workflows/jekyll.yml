# This is a test to see whether we can build our site via jekyll, so that the server can grab it
name: Build Jekyll

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["testAutoDeploy"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# We do not want to write to pages, so I feel that we do not need that one
#permissions:
#  contents: read
#  pages: write
#  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "builder"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      # Ignore pages again, just build with Jekyll
      #- name: Setup Pages
      #  id: pages
      #  uses: actions/configure-pages@v4
      - name: Install bundle
        run: bundle install
      - name: Build with Jekyll
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      - name: Create env variable for file name
        env:
          DAT: koopwebsite-$(date +"%Y-%m-%d_%H-%M").zip
        run: echo $DAT
      - name: Create ssh folder
        run: mkdir -p ~/.ssh
      - name: Pack all output
        run: zip -r $DAT _site/*
      - name: Log private key to console
        with:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        #env:
        #  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: echo "$PRIVATE_KEY"
      - name: Copy key to file
        run: echo ${{ secrets.SSH_PRIVATE_KEY }} > ~/.ssh/ssh-key
      - name: Change permissions
        run: chmod 600 ~/.ssh/ssh-key
      - name: Test key
        run: cat ~/.ssh/ssh-key
      - name: Upload zip
        run: cat $DAT | ssh -i ~/.ssh/ssh-key -o StrictHostkeyChecking=no bosskoop.gemuesekoop.de -p 31415 
      - name: Delete key
        run: rm ~/.ssh/ssh-key

  # Deployment job
  #deploy:
  #  environment:
  #    name: github-pages
  #    url: ${{ steps.deployment.outputs.page_url }}
  #  runs-on: ubuntu-latest
  #  needs: build
  #  steps:
  #    - name: Deploy to GitHub Pages
  #      id: deployment
  #      uses: actions/deploy-pages@v4
